/**
 * Auto-update US stock symbols list from public Nasdaq Trader sources.
 * Sources:
 * - https://www.nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt
 * - https://www.nasdaqtrader.com/dynamic/SymDir/otherlisted.txt (NYSE/NYSE MKT etc.)
 *
 * This script merges, filters out ETFs and test issues, and writes to 'stockList.ts'.
 * Run: npm run update:symbols
 */

import fs from 'node:fs/promises';
import path from 'node:path';

const NASDAQ_URL = 'https://www.nasdaqtrader.com/dynamic/SymDir/nasdaqlisted.txt';
const OTHER_URL = 'https://www.nasdaqtrader.com/dynamic/SymDir/otherlisted.txt';

async function fetchText(url) {
  const res = await fetch(url, { redirect: 'follow' });
  if (!res.ok) throw new Error(`Failed to fetch ${url}: ${res.status}`);
  return await res.text();
}

function parseNasdaq(text) {
  // Columns: Symbol|Security Name|Market Category|Test Issue|Financial Status|Round Lot Size|ETF|NextShares
  const lines = text.split(/\r?\n/);
  const out = [];
  for (const line of lines) {
    if (!line || line.startsWith('Symbol|') || line.startsWith('File Creation Time')) continue;
    const cols = line.split('|');
    if (cols.length < 7) continue;
    const symbol = cols[0]?.trim().toUpperCase();
    const testIssue = cols[3]?.trim();
    const etf = cols[6]?.trim();
    if (!symbol) continue;
    if (testIssue === 'Y') continue; // exclude test issues
    if (etf === 'Y') continue; // exclude ETFs
    if (!/^[A-Z0-9.\-]+$/.test(symbol)) continue;
    out.push(symbol);
  }
  return out;
}

function parseOther(text) {
  // Columns: ACT Symbol|Security Name|Exchange|CQS Symbol|ETF|Round Lot Size|Test Issue|NASDAQ Symbol
  const lines = text.split(/\r?\n/);
  const out = [];
  for (const line of lines) {
    if (!line || line.startsWith('ACT Symbol|') || line.startsWith('File Creation Time')) continue;
    const cols = line.split('|');
    if (cols.length < 7) continue;
    const actSymbol = cols[0]?.trim().toUpperCase();
    const cqsSymbol = cols[3]?.trim().toUpperCase();
    const etf = cols[4]?.trim();
    const testIssue = cols[6]?.trim();
    const symbol = (cqsSymbol || actSymbol);
    if (!symbol) continue;
    if (testIssue === 'Y') continue; // exclude test issues
    if (etf === 'Y') continue; // exclude ETFs
    if (!/^[A-Z0-9.\-]+$/.test(symbol)) continue;
    out.push(symbol);
  }
  return out;
}

function toTsArray(symbols) {
  const sorted = Array.from(new Set(symbols)).sort((a, b) => (a < b ? -1 : a > b ? 1 : 0));
  const header = `// Auto-generated by scripts/update-symbols.mjs\n` +
    `// Source: Nasdaq Trader symbol directories (nasdaqlisted + otherlisted).\n` +
    `// Do not edit manually.\n`;
  const body = `export const stockList: string[] = [\n${sorted.map(s => `  '${s}'`).join(',\n')}\n];\n`;
  return header + body;
}

// Common FX pairs (Yahoo Finance format uses "=X")
const FX_PAIRS = [
  'EURUSD=X', 'GBPUSD=X', 'USDJPY=X', 'USDCHF=X', 'USDCAD=X', 'AUDUSD=X', 'NZDUSD=X',
  'USDILS=X', 'USDNOK=X', 'USDSEK=X', 'USDTRY=X', 'USDINR=X', 'USDCNY=X', 'USDHKD=X',
  'USDKRW=X', 'USDZAR=X', 'USDMXN=X', 'USDBRL=X', 'USDPLN=X', 'USDCLP=X'
];

// Popular crypto tickers (Yahoo Finance format)
const CRYPTO_PAIRS = [
  'BTC-USD', 'ETH-USD', 'SOL-USD', 'BNB-USD', 'XRP-USD', 'DOGE-USD', 'ADA-USD',
  'AVAX-USD', 'DOT-USD', 'MATIC-USD', 'LTC-USD'
];

async function main() {
  console.log('Fetching symbol directories...');
  const [tNasdaq, tOther] = await Promise.all([
    fetchText(NASDAQ_URL),
    fetchText(OTHER_URL),
  ]);
  console.log('Parsing...');
  const nasdaqSyms = parseNasdaq(tNasdaq);
  const otherSyms = parseOther(tOther);
  const all = [...nasdaqSyms, ...otherSyms, ...FX_PAIRS, ...CRYPTO_PAIRS];
  console.log(`Collected: nasdaq=${nasdaqSyms.length}, other=${otherSyms.length}, merged=${all.length}`);

  const tsContent = toTsArray(all);
  const outPath = path.join(process.cwd(), 'stockList.ts');
  await fs.writeFile(outPath, tsContent, 'utf8');
  console.log(`Wrote ${all.length} symbols to ${outPath}`);
}

main().catch((err) => {
  console.error(err);
  process.exitCode = 1;
});


